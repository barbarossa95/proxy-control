package ru.barbarossa;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Dialog;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Greshilov
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jfcSelectFile = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConnections = new javax.swing.JTextArea();
        btnSelectConnections = new javax.swing.JButton();
        cbUsernameAuth = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        btnProxyUp = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtPort = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAllowed = new javax.swing.JTextArea();
        btnSelectAllowed = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RPS");
        setMinimumSize(null);
        setName("frmMain"); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("<html>Введите адрес назначения. Можно несколько, одна строка - один адрес. Формат ввода - username:password@ipaddress.</html>");
        jLabel3.setToolTipText("");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        txtConnections.setColumns(10);
        txtConnections.setTabSize(1);
        txtConnections.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtConnectionsInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(txtConnections);

        btnSelectConnections.setText("Загрузить из файла");
        btnSelectConnections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectConnectionsActionPerformed(evt);
            }
        });

        cbUsernameAuth.setText("Использовать аутентификацию по имени пользователя");
        cbUsernameAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUsernameAuthActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("<html>На основании этих данных будет сформированы настройки сервера. Шаблон настроек лежит в корневой директории приложения.</html>");
        jLabel4.setToolTipText("");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel4.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        btnProxyUp.setText("Запустить установку и настройку");
        btnProxyUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProxyUpActionPerformed(evt);
            }
        });

        jLabel2.setText("Ход выполнения:");

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane2.setViewportView(txtOutput);

        txtPort.setText("11155");
        txtPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortActionPerformed(evt);
            }
        });

        jLabel6.setText("Порт для прокси сервера");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("<html>Введите адреса, которые будут иметь доступ к прокси-серверу. Можно несколько, одна строка - один адрес. Или выберите аутентификацию по имени пользователя.</html>");
        jLabel5.setToolTipText("");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        txtAllowed.setColumns(10);
        txtAllowed.setTabSize(1);
        txtAllowed.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtAllowedInputMethodTextChanged(evt);
            }
        });
        jScrollPane3.setViewportView(txtAllowed);

        btnSelectAllowed.setText("Загрузить из файла");
        btnSelectAllowed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectAllowedActionPerformed(evt);
            }
        });

        jButton1.setText("Работа с интерфейсами");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPort, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProxyUp, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSelectConnections))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbUsernameAuth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelectAllowed))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelectConnections)
                .addGap(32, 32, 32)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelectAllowed)
                    .addComponent(cbUsernameAuth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(14, 14, 14)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProxyUp)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel5.getAccessibleContext().setAccessibleName("<html>Введите адреса, которые будут иметь доступ к прокси-серверу. Можно несколько, одна строка - один адрес. Или выберите метод аутентификации по имени пользователя.</html>");

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnSelectConnectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectConnectionsActionPerformed
        jfcSelectFile.showOpenDialog(this);
        try {
            File f = jfcSelectFile.getSelectedFile();
            if (f != null) {
                String s = "";
                try (Scanner in = new Scanner(f)) {
                    while (in.hasNext()) {
                        s += in.nextLine() + System.lineSeparator();
                    }
                }
                txtConnections.setText(s);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSelectConnectionsActionPerformed

    private void btnProxyUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProxyUpActionPerformed
        boolean useUsernameAuth = cbUsernameAuth.isSelected();

        if (((txtAllowed.getText().length() != 0) || (useUsernameAuth))
                && txtConnections.getText().length() != 0
                && txtPort.getText().length() != 0) {
            connectionsArray = parseConnections(txtConnections.getText());
            String configTemplate;
            if (useUsernameAuth) {
                configTemplate = "sockd.conf.username";
            } else {
                configTemplate = "sockd.conf.ip";
            }
            
            allowedAddreses = parseAllowed(txtAllowed.getText());
            String port = txtPort.getText();
            for (RemoteStation connection : connectionsArray) {
                File templateConfig = new File(configTemplate);
                
                RemoteControl control = new RemoteControl(connection, templateConfig, port, allowedAddreses);

                Thread t = new Thread(control);
                t.start();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Заполните все поля!");
        }
    }//GEN-LAST:event_btnProxyUpActionPerformed

    private void txtPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortActionPerformed
    }//GEN-LAST:event_txtPortActionPerformed

    private void txtConnectionsInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtConnectionsInputMethodTextChanged
    }//GEN-LAST:event_txtConnectionsInputMethodTextChanged

    private void cbUsernameAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUsernameAuthActionPerformed
        JCheckBox checkBox = (JCheckBox) evt.getSource();
        boolean useUsernameAuth = checkBox.isSelected();
        btnSelectAllowed.setEnabled(!useUsernameAuth);
        txtAllowed.setEnabled(!useUsernameAuth);
    }//GEN-LAST:event_cbUsernameAuthActionPerformed

    private void btnSelectAllowedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectAllowedActionPerformed
        jfcSelectFile.showOpenDialog(this);
        try {
            File f = jfcSelectFile.getSelectedFile();
            if (f != null) {
                String s = "";
                try (Scanner in = new Scanner(f)) {
                    while (in.hasNext()) {
                        s += in.nextLine() + System.lineSeparator();
                    }
                }
                txtAllowed.setText(s);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSelectAllowedActionPerformed

    private void txtAllowedInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtAllowedInputMethodTextChanged

    }//GEN-LAST:event_txtAllowedInputMethodTextChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InterfacesConfigurator confForm = new InterfacesConfigurator();
        JDialog dialog = new JDialog(this,"theTitle", true);
        dialog.setContentPane(confForm.getContentPane());
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.pack();
        dialog.setVisible(true);
//        confForm.pack();
//        confForm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Парсит текст и обрабатывает возможные опечатки
     *
     * @param text исходный текст
     * @return массив объектов для подключения
     */
    private RemoteStation[] parseConnections(String text) {
        //Все строки
        String[] lines = text.split(System.lineSeparator());
        //Валидные строки
        ArrayList<String> list = new ArrayList<>();
        for (String s : lines) {
            if (s.isEmpty()) {
                continue;
            }
            if (s.contains("@") && s.contains(":")) {
                list.add(s);
            }
        }
        RemoteStation[] conArray = new RemoteStation[lines.length];
        for (int i = 0; i < list.size(); i++) {
            conArray[i] = new RemoteStation();
            String[] elems;
            elems = list.get(i).split("@");
            conArray[i].setHostname(elems[1]);
            elems = elems[0].split(":");
            conArray[i].setPassword(elems[1]);
            conArray[i].setUsername(elems[0]);
        }
        return conArray;
    }

    /**
     * Парсит текст викидывая пустые строки
     *
     * @param text исходная строка
     * @return массив айпи адресов в виде строки
     */
    private String[] parseAllowed(String text) {
        //Все строки
        String[] lines = text.split(System.lineSeparator());

        //Валидные строки
        ArrayList<String> list = new ArrayList<>();
        for (String s : lines) {
            if (s.isEmpty()) {
                continue;
            }
            list.add(s);
        }
        String[] stockArr = new String[list.size()];
        stockArr = list.toArray(stockArr);
        return stockArr;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProxyUp;
    private javax.swing.JButton btnSelectAllowed;
    private javax.swing.JButton btnSelectConnections;
    private javax.swing.JCheckBox cbUsernameAuth;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JFileChooser jfcSelectFile;
    private javax.swing.JTextArea txtAllowed;
    private javax.swing.JTextArea txtConnections;
    private static javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

    static void out(String text) {
        txtOutput.setText(txtOutput.getText() + text + "\n");
    }

    private RemoteStation[] connectionsArray;
    private String[] allowedAddreses;

}
