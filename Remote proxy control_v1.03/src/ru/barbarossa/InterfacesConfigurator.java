/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.barbarossa;

import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Greshilov
 */
public class InterfacesConfigurator extends javax.swing.JFrame {

    protected String[] currentIPs;
    
    protected RemoteControl control;
    
    /**
     * Creates new form InterfacesConfigurator
     */
    public InterfacesConfigurator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtCurrent = new javax.swing.JTextArea();
        btnGetInterfaces = new javax.swing.JButton();
        btnConfigure = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNew = new javax.swing.JTextArea();
        txtServer = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtCurrent.setColumns(20);
        txtCurrent.setRows(5);
        jScrollPane1.setViewportView(txtCurrent);

        btnGetInterfaces.setText("Получить список интерфейсов сервера");
        btnGetInterfaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetInterfacesActionPerformed(evt);
            }
        });

        btnConfigure.setText("Сконфигурировать сервер");
        btnConfigure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfigureActionPerformed(evt);
            }
        });

        txtNew.setColumns(20);
        txtNew.setRows(5);
        jScrollPane2.setViewportView(txtNew);

        jLabel1.setText("Введите данные сервера (username:password@ipaddress)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtServer)
                            .addComponent(jScrollPane1)
                            .addComponent(btnGetInterfaces, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnConfigure, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConfigure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGetInterfaces, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetInterfacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetInterfacesActionPerformed
        if (txtServer.getText().length() == 0 )
            return;
        txtCurrent.setText("");
        RemoteStation connection = new RemoteStation();
        String[] elems;
        elems = txtServer.getText().split("@");
        connection.setHostname(elems[1]);
        elems = elems[0].split(":");
        connection.setPassword(elems[1]);
        connection.setUsername(elems[0]);
        control = new RemoteControl(connection);
        if (!control.connect()) {
            JOptionPane.showMessageDialog(null, "Some error wlihe connect to " + txtServer.getText());
            return;
        }
        String pathToRemoteFile = "/tmp/interfaces.tmp";
        control.createInterfacesFile(pathToRemoteFile);
        currentIPs = control.getInterfaces(pathToRemoteFile);
        
        for(String ip : currentIPs) {
            txtCurrent.append(ip+System.lineSeparator());
        }
    }//GEN-LAST:event_btnGetInterfacesActionPerformed

    private void btnConfigureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfigureActionPerformed
        if (currentIPs.length == 0) {
            btnGetInterfacesActionPerformed(evt);
        }
        String[] newIPs = txtNew.getText().split("\n");
        int ifaceNumber = currentIPs.length;
        String cmd = "";
        String interfaces = "/etc/network/interfaces";
        for (String ip : newIPs) {
            if (Arrays.asList(currentIPs).contains(ip)) {
                continue;
            }
            cmd +=  "echo auto eth0:" + ifaceNumber + " >> " + interfaces + "\n" +
                    "echo iface eth0:" + ifaceNumber + " inet static >> " + interfaces + "\n" +
                    "echo address " + ip + " >> " + interfaces + "\n" +
                    "echo netmask 255.255.255.255 >> " + interfaces + "\n\n";
            ifaceNumber++;
        }
        cmd += "/etc/init.d/networking restart";
        boolean success = control.executeCommand(control.getSession(), cmd);
        if (success) {
            txtNew.setText("");
            btnGetInterfacesActionPerformed(evt);
        }        
    }//GEN-LAST:event_btnConfigureActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacesConfigurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacesConfigurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacesConfigurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacesConfigurator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacesConfigurator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfigure;
    private javax.swing.JButton btnGetInterfaces;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtCurrent;
    private javax.swing.JTextArea txtNew;
    private javax.swing.JTextField txtServer;
    // End of variables declaration//GEN-END:variables
}
